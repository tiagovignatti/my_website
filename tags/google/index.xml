<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Google - Tag - Tiago Vignatti</title>
        <link>https://vignatti.com/tags/google/</link>
        <description>Google - Tag - Tiago Vignatti</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 07 Aug 2008 23:22:27 &#43;0000</lastBuildDate><atom:link href="https://vignatti.com/tags/google/" rel="self" type="application/rss+xml" /><item>
    <title>keep it going...</title>
    <link>https://vignatti.com/posts/keep-it-going/</link>
    <pubDate>Thu, 07 Aug 2008 23:22:27 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://vignatti.com/posts/keep-it-going/</guid>
    <description><![CDATA[<p>Given that GSoC &lsquo;08 is getting close to the end, <a href="http://vignatti.wordpress.com/2008/07/29/improving-input-latency/" target="_blank" rel="noopener noreffer">strategy number 2</a> showed more feasible to proceed my work. Strategy #3 would be a lot of fun but would imply a hell massive codification as well (also a little out of <a href="http://vignatti.wordpress.com/2008/04/29/google-summer-of-code-2008/" target="_blank" rel="noopener noreffer">our scope</a>). Unfortunately no-no for now.</p>]]></description>
</item><item>
    <title>Google Summer of Code 2008</title>
    <link>https://vignatti.com/posts/google-summer-of-code-2008/</link>
    <pubDate>Tue, 29 Apr 2008 21:31:27 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://vignatti.com/posts/google-summer-of-code-2008/</guid>
    <description><![CDATA[<p>I&rsquo;m very happy to say that I was selected <strong>again</strong> to work on Google Summer of Code with X.Org Foundation. <a href="http://www.fooishbar.org/blog" target="_blank" rel="noopener noreffer">Daniel</a> will be my mentor again. Thanks Google. Thanks X.Org!</p>
<p>In the last year we did a nice work separating the input event generation code of the X server into a different thread. We saw some performance improvement there specially because the implementation is not using signals anymore to wake up the server when some device emits an event. The reason why is that when a process is in the uninterruptible sleep (D state) signals are delayed and the mouse cursor lags.</p>]]></description>
</item></channel>
</rss>
