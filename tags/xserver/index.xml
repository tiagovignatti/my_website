<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>xserver - Tag - Tiago Vignatti</title>
        <link>https://tiagovignatti.github.io/my_website/tags/xserver/</link>
        <description>xserver - Tag - Tiago Vignatti</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 28 Feb 2011 20:31:05 &#43;0000</lastBuildDate><atom:link href="https://tiagovignatti.github.io/my_website/tags/xserver/" rel="self" type="application/rss+xml" /><item>
    <title>X Census (for 1.10)</title>
    <link>https://tiagovignatti.github.io/my_website/posts/x-census-for-1-10/</link>
    <pubDate>Mon, 28 Feb 2011 20:31:05 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://tiagovignatti.github.io/my_website/posts/x-census-for-1-10/</guid>
    <description><![CDATA[Following is the census of 1.10 window for all X infrastructure - raw numbers here. I did it in a similar way as the previous version. Worth to mention that there&rsquo;s almost no relation between the cycles of development from each of the components listed below, which can lead to some misunderstanding. Anyway, still a nice indicative to see and evaluate how the free desktop community behaved.
Numbers for X implementation (xserver, proto, lib and xcb repositories):]]></description>
</item><item>
    <title>multiseat with multiple X servers (or &#34;the right way&#34;)</title>
    <link>https://tiagovignatti.github.io/my_website/posts/multiseat-with-multiple-x-servers-or-the-right-way/</link>
    <pubDate>Fri, 24 Jul 2009 13:56:33 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://tiagovignatti.github.io/my_website/posts/multiseat-with-multiple-x-servers-or-the-right-way/</guid>
    <description><![CDATA[So last week I posted on lkml an old patch that we were carrying for a long time in the Linux community. It basically brings the multiple (old) video cards functionally again on Linux and X server (and this time doing on the right and beauty way). For the people that was following multiseat implementations, this is a HUGE step: we will finally be able to discard the old and ugly hack (a mix of Xorg, several Xephyr servers + evdev) and and go to a clean way, starting multiple X servers in parallel.]]></description>
</item><item>
    <title>Priorities and scheduling hints for X server threads</title>
    <link>https://tiagovignatti.github.io/my_website/posts/priorities-and-scheduling-hints-for-x-server-threads/</link>
    <pubDate>Thu, 07 Aug 2008 23:33:57 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://tiagovignatti.github.io/my_website/posts/priorities-and-scheduling-hints-for-x-server-threads/</guid>
    <description><![CDATA[Input events routed through another thread/process can have bad effects on latency because we can&rsquo;t guarantee that it will get scheduled at the right moment. Although this is hard to see happening with the current X server threaded implementation, we must design something to avoid it. One way to improve the responsiveness is to give a high priority to the input thread and also adjust the CPU scheduling. (Note that this will not avoid problems related with page faults which usually happen in the X input flow.]]></description>
</item><item>
    <title>VGA arbiter: removing RAC</title>
    <link>https://tiagovignatti.github.io/my_website/posts/vga-arbiter-removing-rac/</link>
    <pubDate>Thu, 20 Dec 2007 01:18:39 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://tiagovignatti.github.io/my_website/posts/vga-arbiter-removing-rac/</guid>
    <description><![CDATA[The Resource Access Control inside Xorg is the guy responsible to take care of the various resources of memory and to share them in a wise manner when two or more graphics devices are active (think multi-head). As an alternative from RAC we can rely on VGA arbiter. So me and Paulo Zanoni spent the last days implementing &ldquo;the glue&rdquo; of Xorg to use the arbiter code with this purpose.]]></description>
</item></channel>
</rss>
