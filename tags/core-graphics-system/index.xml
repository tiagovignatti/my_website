<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Core Graphics System - Tag - Tiago Vignatti</title>
        <link>https://vignatti.com/tags/core-graphics-system/</link>
        <description>Core Graphics System - Tag - Tiago Vignatti</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 17 Oct 2012 13:15:38 &#43;0000</lastBuildDate><atom:link href="https://vignatti.com/tags/core-graphics-system/" rel="self" type="application/rss+xml" /><item>
    <title>the damn small Wayland API</title>
    <link>https://vignatti.com/posts/the-damn-small-wayland-api/</link>
    <pubDate>Wed, 17 Oct 2012 13:15:38 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://vignatti.com/posts/the-damn-small-wayland-api/</guid>
    <description><![CDATA[<p><a href="http://lists.freedesktop.org/archives/wayland-devel/2012-October/005878.html" target="_blank" rel="noopener noreffer">Wayland 1.0 release is knocking the door</a> and people keep asking &ldquo;why Wayland if we got X already&rdquo;, or things like performance, memory consumption, power savings and other kind of advantages on having Wayland instead X. Those are very important points to consider, of course, but for one individual actually programming the graphics system the answer should be straightforward: Wayland API is damn small.</p>
<p><em>1. But who&rsquo;s going to program Wayland or X?</em></p>]]></description>
</item></channel>
</rss>
