<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Embedded - Tag - Tiago Vignatti</title>
        <link>https://vignatti.com/tags/embedded/</link>
        <description>Embedded - Tag - Tiago Vignatti</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 30 Jul 2010 16:38:58 &#43;0000</lastBuildDate><atom:link href="https://vignatti.com/tags/embedded/" rel="self" type="application/rss+xml" /><item>
    <title>Linux Graphics for Small Devices at FISL</title>
    <link>https://vignatti.com/posts/linux-graphics-for-small-devices-at-fisl/</link>
    <pubDate>Fri, 30 Jul 2010 16:38:58 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://vignatti.com/posts/linux-graphics-for-small-devices-at-fisl/</guid>
    <description><![CDATA[<p>Last week I&rsquo;ve been in Brazil at 11th International Free Software Forum (FISL) talking about Linux Graphics for Small Devices*. I tried to cover a bit of everything that I learned in the world I&rsquo;ve been immersed in some near past - I guess there aren&rsquo;t many news for <em>freedesktopers</em> though. Anyway, everyone is very welcome to give any kind of feedback and comment on it. Just follow <a href="http://people.freedesktop.org/~vignatti/talks/FISL11-LinuxGraphicsForSmallDevices.pdf" target="_blank" rel="noopener noreffer">here</a>.</p>
<p>*actually, two nights in Porto Alegre and two nights in Curitiba. Was great to see most of my friends!</p>]]></description>
</item><item>
    <title>Scrutinizing X memory, part 2: what&#39;s taking all that memory?</title>
    <link>https://vignatti.com/posts/scrutinizing-x-memory-part-2-whats-taking-all-that-memory/</link>
    <pubDate>Thu, 25 Mar 2010 18:01:10 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://vignatti.com/posts/scrutinizing-x-memory-part-2-whats-taking-all-that-memory/</guid>
    <description><![CDATA[<p>So here goes some statistics of the Xorg process running. All the informations were fetch from /proc/<code>pidof Xorg</code>/{smaps, status}. I used also a <a href="http://wingolog.org/pub/mem_usage.py" target="_blank" rel="noopener noreffer">script</a> found on the <a href="http://wingolog.org/archives/2007/11/27/reducing-the-footprint-of-python-applications" target="_blank" rel="noopener noreffer">Web</a> to parse and organize these informations; Mikhail Gusarov has <a href="http://github.com/dottedmag/mem-usage" target="_blank" rel="noopener noreffer">extended</a> this script to show a very useful <a href="http://people.freedesktop.org/~vignatti/scrutinizing-x-mem/x-standalone-memory-per-libraries.txt" target="_blank" rel="noopener noreffer">output</a>.</p>
<h3 id="xorg-per-se">Xorg per se</h3>
<p>Running just one standalone <code>Xorg -retro</code>. In my system it represents:
VmRSS:      5440 kB
VmSize:    13620 kB</p>
<p>from those 5440 kB of RSS:
3404 kB (63 %) come from code
1628 kB (30 %) come from malloc/mmap in anonymous memory (heap)
228 kB  (4 %) come from other data mapped in memory
180 kB  (3 %) come from rodata</p>]]></description>
</item><item>
    <title>Scrutinizing X Memory, part 1: overview</title>
    <link>https://vignatti.com/posts/scrutinizing-x-memory-part-1-overview/</link>
    <pubDate>Thu, 25 Mar 2010 17:58:47 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://vignatti.com/posts/scrutinizing-x-memory-part-1-overview/</guid>
    <description><![CDATA[<p>This series of documents explore how the memory is used by the Xorg server. They aim to eventually shrinks the memory footprint of the server and its related components, like X clients, modules being loaded and drivers. Embedded devices with constrained resources are the main focus here. All texts are mostly based on x86 and ARM architectures, under Linux 2.6.33 with Xorg from upstream.</p>
<h3 id="overview">Overview</h3>
<p>One way to analyse aspects of memory usage of a given program is to scrutinize its object data. Object data contains executable code and static data. Both are of little interest from the process memory management point of view given their layout is determined by the compiler and does not change during process execution. However, we can deduce some nice informations about the object. For instance, from Xorg object we are able to get some statistics about the code, identify its structure and point out architectural mistakes just looking into.</p>]]></description>
</item><item>
    <title>my dear diary... (some not-so-old memories)</title>
    <link>https://vignatti.com/posts/my-dear-diary-some-not-so-old-memories/</link>
    <pubDate>Mon, 09 Nov 2009 01:47:17 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://vignatti.com/posts/my-dear-diary-some-not-so-old-memories/</guid>
    <description><![CDATA[<p><strong><em>Portland, OR</em></strong></p>
<p>I was so proud for the forth time be part of the X crew, this time in Portland. Really amazing the city. I had the opportunity to play tourist and visit <a href="http://www.flickr.com/photos/tiagovignatti/sets/72157622611218823/" target="_blank" rel="noopener noreffer">some nice places</a>.</p>
<p><em><strong>My X conferences</strong></em></p>
<p>BTW, I just collect the photos of all four <a href="http://www.flickr.com/photos/tiagovignatti/collections/72157622382815859/" target="_blank" rel="noopener noreffer">X conferences that I&rsquo;ve attended</a>. It&rsquo;s not much photos but there&rsquo;s some funny things :)</p>
<p><strong><em>X on embedded</em></strong></p>
<p>The cool thing of the work that I&rsquo;m doing at Nokia is that I can publish and discuss mostly all X fun with the open source communities. &ldquo;Mostly&rdquo; because, for the last device - the N-shiny-and-awesome-900 - for instance, the video driver is closed (provided by Imagination), so we cannot comment much regarding such driver stack :( C&rsquo;est la vie.</p>]]></description>
</item></channel>
</rss>
